[{"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/index.js":"1","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/splash.jsx":"2","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/login.jsx":"3","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/libs/db.js":"4","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/explore.jsx":"5","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/dashboard.jsx":"6","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/components/navbar.jsx":"7","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/libs/user.js":"8","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/App.jsx":"9"},{"size":504,"mtime":1607351756852,"results":"10","hashOfConfig":"11"},{"size":1404,"mtime":1607357972669,"results":"12","hashOfConfig":"11"},{"size":117,"mtime":1607354184979,"results":"13","hashOfConfig":"11"},{"size":3957,"mtime":1607351756853,"results":"14","hashOfConfig":"11"},{"size":2221,"mtime":1607597203463,"results":"15","hashOfConfig":"11"},{"size":413,"mtime":1607351756853,"results":"16","hashOfConfig":"11"},{"size":889,"mtime":1607596310405,"results":"17","hashOfConfig":"11"},{"size":4081,"mtime":1607351756853,"results":"18","hashOfConfig":"11"},{"size":1308,"mtime":1607589763881,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"196krpr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/index.js",[],["44","45"],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/splash.jsx",["46"],"import { Button } from 'react-bulma-components';\nimport React, { useState } from 'react';\nconst ScryptaCore = require('@scrypta/core')\nconst scrypta = new ScryptaCore(true)\n\nexport function Splash() {\n    return (\n        <div className=\"Splash\">\n            <div>\n                <h1><span style={{ fontSize: \"70px\", marginTop: \"30px\" }}>Scrypta</span><br />Decentralized Names</h1><br />\n            </div>\n            <p>\n                This is an example of how Scrypta Smart Contracts works, let's define what you'll be able to do with this dApp:<br />\n                Please login with your extension to start play with this dApp.<br /><br />\n            </p>\n            <ul>\n                <li>A list of public blockchain names, managed directly by the Smart Contract</li>\n                <li>You'll be able to register your own name</li>\n            </ul><br />\n            <h1>\n                Want to see what's going on without stress?<br />\n                Don't panic, push below button.\n            </h1><br />\n            <Button onClick={\n                async () => {\n                    let wallet = await scrypta.createAddress('guest');\n                    localStorage.setItem('SID', wallet.walletstore)\n                    localStorage.setItem('isGuest', true)\n                    window.location.reload()\n                }} color=\"primary\">Enter!</Button>\n        </div>\n    );\n}",["47","48"],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/login.jsx",[],["49","50"],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/libs/db.js",[],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/explore.jsx",["51","52","53","54"],"import { Button } from 'react-bulma-components';\nimport React, { useState } from 'react';\nimport { Form, Heading, Card, Content, Media, Container, Columns, Column, Label, Box, } from 'react-bulma-components';\nimport { NavBar, } from '../components/navbar.jsx';\nconst ScryptaCore = require('@scrypta/core')\nconst scrypta = new ScryptaCore(true)\nconst { Input, Field, Control } = Form;\n\nexport function Explore() {\n  let [search, setSearch] = useState([])\n  let [explore, setExplore] = useState([])\n  let [searcher, setSearcher] = useState(\"\")\n\n  async function init() {\n    let address = await scrypta.createAddress('MyPassword')\n    let request = await scrypta.createContractRequest(address.walletstore, 'MyPassword', { contract: \"LgSAtP3gPURByanZSM32kfEu9C1uyQ6Kfg\", function: \"search\", params: { contract: \"LcD7AGaY74xvVxDg3NkKjfP6QpG8Pmxpnu\", version: \"latest\" } })\n    setSearch(JSON.stringify(request))\n  }\n\n  init()\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"Explore\">\n        <Container>\n          <Columns>\n            <Columns.Column style={{ marginTop: \"40px\" }}>\n              <Box>\n                <h1><b>Search a name</b></h1>\n                <Field>\n                  <Input onChange={(evt) => { setSearcher(evt.target.value) }} value={searcher} />\n                  <Control style={{ position: \"absolute\", top: \"95px\", right: \"100px\" }}>\n                    <Button color=\"info\">Search</Button>\n                  </Control>\n                </Field>\n              </Box>\n            </Columns.Column>\n          </Columns>\n        </Container>\n        <Container>\n          <Columns>\n            <Columns.Column style={{ marginTop: \"40px\" }}>\n              <Card>\n                <Card.Content align=\"center\">\n                  <Media>\n                    <Media.Item>\n                      <Heading size={5} align=\"center\">LATEST DOMAIN REGISTERED</Heading>\n                    </Media.Item>\n                  </Media>\n                  <hr></hr>\n                  <Content>\n                    {search}\n                  </Content>\n                </Card.Content>\n              </Card>\n            </Columns.Column>\n          </Columns>\n        </Container>\n      </div>\n    </div>\n  );\n}","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/views/dashboard.jsx",["55","56","57","58","59","60"],"import { Button } from 'react-bulma-components';\nimport React, { useState } from 'react';\nimport { Form } from 'react-bulma-components';\nimport { NavBar } from '../components/navbar.jsx';\nconst ScryptaCore = require('@scrypta/core')\nconst scrypta = new ScryptaCore(true)\nconst { Input, Field, Control } = Form;\n\nexport function Dashboard() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}","/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/components/navbar.jsx",[],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/libs/user.js",[],"/Users/Stefano/Desktop/Scrypta/GIT/scrypta-decentralized-names/src/App.jsx",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"62","replacedBy":"72"},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":3,"column":67,"nodeType":"68","messageId":"69","endLine":3,"endColumn":73},{"ruleId":"66","severity":1,"message":"75","line":3,"column":75,"nodeType":"68","messageId":"69","endLine":3,"endColumn":80},{"ruleId":"66","severity":1,"message":"76","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":15},{"ruleId":"66","severity":1,"message":"77","line":11,"column":17,"nodeType":"68","messageId":"69","endLine":11,"endColumn":27},{"ruleId":"66","severity":1,"message":"78","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"66","severity":1,"message":"79","line":6,"column":7,"nodeType":"68","messageId":"69","endLine":6,"endColumn":14},{"ruleId":"66","severity":1,"message":"80","line":7,"column":9,"nodeType":"68","messageId":"69","endLine":7,"endColumn":14},{"ruleId":"66","severity":1,"message":"81","line":7,"column":16,"nodeType":"68","messageId":"69","endLine":7,"endColumn":21},{"ruleId":"66","severity":1,"message":"82","line":7,"column":23,"nodeType":"68","messageId":"69","endLine":7,"endColumn":30},{"ruleId":"66","severity":1,"message":"83","line":12,"column":3,"nodeType":"68","messageId":"69","endLine":12,"endColumn":7},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["84"],["85"],["84"],["85"],"'Column' is defined but never used.","'Label' is defined but never used.","'explore' is assigned a value but never used.","'setExplore' is assigned a value but never used.","'Button' is defined but never used.","'scrypta' is assigned a value but never used.","'Input' is assigned a value but never used.","'Field' is assigned a value but never used.","'Control' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]